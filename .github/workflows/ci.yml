name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (devcontainer)
        id: docker-meta-devcontainer
        uses: docker/metadata-action@v5
        with:
          bake-target: devcontainer
          images: |
            ghcr.io/${{ github.repository_owner }}/devcontainer
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,enable=${{ github.event_name == 'push' }}
            type=raw,value=2,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Docker meta (jenkins-agent-dind)
        id: docker-meta-jenkins-agent-dind
        uses: docker/metadata-action@v5
        with:
          bake-target: jenkins-agent-dind
          images: |
            ghcr.io/${{ github.repository_owner }}/jenkins-agent-dind
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,enable=${{ github.event_name == 'push' }}
            type=raw,value=2,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - name: Install pkgx
        uses: pkgxdev/setup@v2

      - name: Install test dependencies
        run: .devcontainer/post_create.sh

      - name: Build
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker-meta-devcontainer.outputs.bake-file }}
            ${{ steps.docker-meta-jenkins-agent-dind.outputs.bake-file }}
          set: |
            *.platform=linux/amd64,linux/arm64
            devcontainer.cache-from=type=gha,scope=cached-stage-devcontainer
            devcontainer.cache-to=type=gha,scope=cached-stage-devcontainer,mode=max
            jenkins-agent-dind.cache-from=type=gha,scope=cached-stage-jenkins-agent-dind
            jenkins-agent-dind.cache-to=type=gha,scope=cached-stage-jenkins-agent-dind,mode=max

      - name: Test
        run: |
          ./test.sh

      - name: Push
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker-meta-devcontainer.outputs.bake-file }}
            ${{ steps.docker-meta-jenkins-agent-dind.outputs.bake-file }}
          set: |
            *.platform=linux/amd64,linux/arm64
          push: true
