name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (devcontainer)
        id: docker-meta-devcontainer
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
        with:
          bake-target: devcontainer
          images: |
            ghcr.io/${{ github.repository_owner }}/devcontainer
          labels: |
            org.opencontainers.image.title=Devcontainer
            org.opencontainers.image.description=A multi-purpose Docker on Docker or Docker in Docker image to be used as a Devcontainer.
          annotations: |
            org.opencontainers.image.title=Devcontainer
            org.opencontainers.image.description=A multi-purpose Docker on Docker or Docker in Docker image to be used as a Devcontainer.
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,enable=${{ github.event_name == 'push' }}
            type=raw,value=2,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Docker meta (jenkins-agent-dind)
        id: docker-meta-jenkins-agent-dind
        uses: docker/metadata-action@v5
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index
        with:
          bake-target: jenkins-agent-dind
          images: |
            ghcr.io/${{ github.repository_owner }}/jenkins-agent-dind
          labels: |
            org.opencontainers.image.title=Jenkins Agent with Docker in Docker
            org.opencontainers.image.description=A Docker in Docker image to provide fully ephemeral Jenkins agents.
          annotations: |
            org.opencontainers.image.title=Jenkins Agent with Docker in Docker
            org.opencontainers.image.description=A Docker in Docker image to provide fully ephemeral Jenkins agents.
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,enable=${{ github.event_name == 'push' }}
            type=raw,value=2,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Rename meta bake definition file
        run: |
          mv -fv "${{ steps.docker-meta-devcontainer.outputs.bake-file }}" "${{ runner.temp }}/bake-meta-devcontainer.json"
          mv -fv "${{ steps.docker-meta-devcontainer.outputs.bake-file-annotations }}" "${{ runner.temp }}/bake-meta-annotations-devcontainer.json"
          mv -fv "${{ steps.docker-meta-jenkins-agent-dind.outputs.bake-file }}" "${{ runner.temp }}/bake-meta-jenkins-agent-dind.json"
          mv -fv "${{ steps.docker-meta-jenkins-agent-dind.outputs.bake-file-annotations }}" "${{ runner.temp }}/bake-meta-annotations-jenkins-agent-dind.json"

      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: docker-bake-meta
          path: ${{ runner.temp }}/bake-meta-*.json
          if-no-files-found: error
          retention-days: 1

  build:
    needs:
      - prepare

    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04
          - ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: docker-bake-meta
          path: ${{ runner.temp }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Needed for jenkins-agent-dind/test.sh
          driver-opts: network=host

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: docker/bake-action@v6
        with:
          source: .
          set: |
            devcontainer.cache-from=type=gha,scope=devcontainer-${{ matrix.runner }}
            jenkins-agent-dind.cache-from=type=gha,scope=jenkins-agent-dind-${{ matrix.runner }}
            devcontainer.cache-to=type=gha,scope=devcontainer-${{ matrix.runner }}
            jenkins-agent-dind.cache-to=type=gha,scope=jenkins-agent-dind-${{ matrix.runner }}
          load: true

      - name: Test
        uses: devcontainers/ci@v0.3
        with:
          runCmd: ./test.sh

      - name: Push by digest
        id: docker-bake
        uses: docker/bake-action@v6
        with:
          source: .
          files: |
            ./docker-bake.hcl
            cwd://${{ runner.temp }}/bake-meta-devcontainer.json
            cwd://${{ runner.temp }}/bake-meta-annotations-devcontainer.json
            cwd://${{ runner.temp }}/bake-meta-jenkins-agent-dind.json
            cwd://${{ runner.temp }}/bake-meta-annotations-jenkins-agent-dind.json
          set: |
            devcontainer.tags=ghcr.io/${{ github.repository_owner }}/devcontainer
            jenkins-agent-dind.tags=ghcr.io/${{ github.repository_owner }}/jenkins-agent-dind
            *.output=type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          set -eux
          tee "${{ runner.temp }}/docker-bake-metada.json" <<'EOF'
          ${{ steps.docker-bake.outputs.metadata }}
          EOF
          for target in devcontainer jenkins-agent-dind; do
            mkdir -p "${{ runner.temp }}/digests/${target}"
            digest="$(jq -er --arg t "$target" '.[$t]["containerimage.digest"]' "${{ runner.temp }}/docker-bake-metada.json")"
            touch "${{ runner.temp }}/digests/${target}/${digest#sha256:}"
          done

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.runner }}
          path: ${{ runner.temp }}/digests/**/*
          if-no-files-found: error
          retention-days: 1

  finish:
    needs:
      - build

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download meta bake definition
        uses: actions/download-artifact@v4
        with:
          name: docker-bake-meta
          path: ${{ runner.temp }}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        run: |
          set -eux
          for target in devcontainer jenkins-agent-dind; do
            image="ghcr.io/${{ github.repository_owner }}/${target}"
            tag_args="$(jq -cer --arg t "${target}" '.target[$t].tags | map("-t " + .) | join(" ")' "${{ runner.temp }}/bake-meta-${target}.json")"
            cd "${{ runner.temp }}/digests/${target}"
            digest_args="$(printf "${image}@sha256:%s " *)"
            cd -
            docker buildx imagetools create ${tag_args} ${digest_args}
          done

      - name: Inspect image
        run: |
          set -eux
          for target in devcontainer jenkins-agent-dind; do
            image="ghcr.io/${{ github.repository_owner }}/${target}"
            version="$(jq -er --arg t "${target}" '.target[$t].args.DOCKER_META_VERSION' "${{ runner.temp }}/bake-meta-${target}.json")"
            docker buildx imagetools inspect "${image}:${version}"
          done
